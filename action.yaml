# action.yml
name: "setenv"
description: "Set enviroment variables from Vault app_role_applications"
inputs:
  name:
    description: "Vault app_role_applications name"
    required: true
  env:
    description: "Vault environment eg: prod"
    required: true
  token:
    description: "Vault token, defaults to /vault/secrets/token"
    required: false
  cluster:
    description: "Can be used multiple times, exported in KUBE_CONFIG_PATH: ~/.kube/atlantis/config"
    required: false
  azure:
    description: "Get Azure credentials, exported as ARM_CLIENT_ID and ARM_CLIENT_SECRET"
    required: false
  azure_tenant_id:
    description: "Azure tenant ID. Required if --azure is set"
    required: false
    default: ""
  azure_subscription_id:
    description: "Azure subscription ID. Subscription ID for which your state is stored. Required if --azure is set"
    required: false
    default: ""
  azure_resource_group:
    description: "Azure resource group name. Resource group for which your state is stored. Required if --azure is set"
    required: false
    default: ""
  azure_no_arm:
    description: "Do not export ARM_CLIENT_ID and ARM_CLIENT_SECRET, only TF_VAR_azure_client_id and TF_VAR_azure_client_secret"
    required: false
  gcp:
    description: 'GCP project names, creates TF_VAR_gcp_project_name for use in "credentials" in google provider'
    required: false
  terraform_registry:
    description: 'Get Terraform registry token, expects to be found in vault under "token" in secret/applications/{name}/{env}/terraform-registry'
    required: false
  no_wait:
    description: "Do not wait for credentials to propagate"
    required: false
  eval:
    description: "Output as export statements, for use with eval $()"
    required: false
  new_line:
    description: "Output as text separated by newline"
    required: false
  debug:
    description: "Print progress messages"
    required: false
  vault_role_id_name:
    description: 'Name of the environment variable for Vault role ID, defaults to "TF_VAR_vault_role_id"'
    required: false
  vault_secret_id_name:
    description: 'Name of the environment variable for Vault secret ID, defaults to "TF_VAR_vault_secret_id"'
    required: false
  vault_secret_id_cidr:
    description: "CIDR to use for Vault secret ID, defaults to the IP address from --myip-url with /32 suffix"
    required: false
  cache:
    description: "Cache/ use cached credentials"
    required: false
  cache_file:
    description: "Path and name to cache file, defaults to /tmp/{repo_name}_{workflow_name}.cache.json when running in atlantis, or /tmp/{current_workdir}.cache.json when running from shell"
    required: true
  secret:
    description: 'Every key/value pair in vault applications "setenv" secret is added to env vars on hardcoded path secret/applications/{name}/{env}/setenv'
    required: false
  vault_secret:
    description: "Get secret from vault, spec path to secret, key in secret and name of environment variable to export. Can be used multiple times, e.g. --vault-secret secret/applications/myapp/prod:mykey:MY_VAR_NAME. using * as key, all keys in secret will be exported with the speced var_name as prefix, e.g.: --vault-secret secret/applications/myapp/prod:*:MY_PREFIX_ will export MY_PREFIX_key1, MY_PREFIX_key2 etc."
    required: false
  myip_url:
    description: "URL to get current IP address, default is http://icanhazip.com"
    required: false

runs:
  using: "docker"
  image: "Dockerfile"
  # args:
  #   - --name ${{ inputs.name }}
  #   - --env ${{ inputs.env }}
  #   - --cluster ${{ inputs.cluster }}
  #   - --azure ${{ inputs.azure}}
  #   - --azure-no-arm ${{ inputs.azure-no-arm }}
  #   - --gcp ${{ inputs.gcp }}
  #   - --terraform-registry ${{ inputs.terraform-registry }}
  #   - --no-wait ${{ inputs.no-wait }}
  #   - --eval ${{ inputs.eval }}
  #   - --new-line ${{ inputs.new-line }}
  #   - --debug ${{ inputs.debug }}
  #   - --token ${{ inputs.token }}
  #   - --vault-role-id-name ${{ inputs.vault-role-id-name }}
  #   - --vault-secret-id-name ${{ inputs.vault-secret-id-name }}
  #   - --cache ${{ inputs.cache }}
  #   - --cache-file ${{ inputs.cache-file }}
  #   - --secret ${{ inputs.secret }}
  #   - --vault-secret ${{ inputs.vault-secret }}
  #   - --vault-secret ${{ inputs.vault-secret }}
  #   - --myip-url ${{ inputs.myip-url }}
